{"version":3,"file":"static/js/888.5d78f44b.chunk.js","mappings":"2NACA,EAA4B,gCAA5B,EAAyE,iCAAzE,EAA2H,qCAA3H,EAAyK,6BAAzK,EAAgN,8BAAhN,EAA+P,qC,SCgD/P,MA5CA,WAAyB,IAADA,EACZC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAMtB,OAJAI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBT,GAASU,KAAKH,EAClC,GAAG,CAACP,IAECM,GAGDK,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,IAAIL,UAAWC,EAAkBC,SAAC,oBAC3CH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OACIG,IAAKZ,EAAMa,YAAW,kCAAAC,OAAqCd,EAAMa,aAAgB,oDACjFE,IAAKf,EAAMgB,MACXV,UAAWC,KAEfF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAKR,EAAMgB,MAAM,KAAqB,QAAnBvB,EAACO,EAAMiB,oBAAY,IAAAxB,OAAA,EAAlBA,EAAoByB,MAAM,EAAG,GAAG,QACpDb,EAAAA,EAAAA,MAAA,KAAAG,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,IAAEW,KAAKC,MAA2B,GAArBpB,EAAMqB,cAAmB,QACrEZ,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,EAAMsB,YACVb,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,EAAMuB,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAI,IAAEC,KAAK,eAI/CtB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YACpBC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,qBAI/BC,EAAAA,EAAAA,KAACmB,EAAAA,SAAQ,CAACC,UAAUpB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAeA,UAClCC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,UA9BArB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAkC1B,C,sLC/CMuB,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,uBACtBC,EAAW,+BAKV,SAAeC,IAAiB,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAWvC,SAAAF,IAFC,OAEDA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAXO,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBC,MAAM,GAADjC,OAAIoB,EAAQ,gCAAApB,OAA+BiB,EAAO,oBAAmB,KAAD,EAAlF,OAARW,EAAQE,EAAAI,KAAAJ,EAAAE,KAAA,EACKJ,EAASO,OAAO,KAAD,EAAxB,OAAJN,EAAIC,EAAAI,KAAAJ,EAAAM,OAAA,SACHP,EAAKQ,SAAW,IAAE,QAE+B,OAF/BP,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEzBS,QAAQC,MAAM,kCAAiCV,EAAAQ,IAASR,EAAAM,OAAA,SACjD,IAAE,yBAAAN,EAAAW,OAAA,GAAAd,EAAA,oBAEhBJ,MAAA,KAAAC,UAAA,CAMM,SAAekB,EAAYC,GAAA,OAAAC,EAAArB,MAAC,KAADC,UAAA,CAYlC,SAAAoB,IAFC,OAEDA,GAAAnB,EAAAA,EAAAA,GAAAC,IAAAA,MAZO,SAAAmB,EAA4BC,GAAK,IAAAlB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAqB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,UAAAe,EAAAhB,KAAA,EAE3Be,EAAM,CAADC,EAAAf,KAAA,eAAAe,EAAAX,OAAA,SAAS,IAAE,cAAAW,EAAAf,KAAA,EACEC,MAAM,GAADjC,OAAIoB,EAAQ,0BAAApB,OAAyBiB,EAAO,WAAAjB,OAAU8C,EAAK,oBAAmB,KAAD,EAA3F,OAARlB,EAAQmB,EAAAb,KAAAa,EAAAf,KAAA,EACKJ,EAASO,OAAO,KAAD,EAAxB,OAAJN,EAAIkB,EAAAb,KAAAa,EAAAX,OAAA,SACHP,EAAKQ,SAAW,IAAE,QAE2B,OAF3BU,EAAAhB,KAAA,GAAAgB,EAAAT,GAAAS,EAAA,SAEzBR,QAAQC,MAAM,8BAA6BO,EAAAT,IAASS,EAAAX,OAAA,SAC7C,IAAE,yBAAAW,EAAAN,OAAA,GAAAI,EAAA,oBAEhBtB,MAAA,KAAAC,UAAA,CAMM,SAAenC,EAAe2D,GAAA,OAAAC,EAAA1B,MAAC,KAADC,UAAA,CAWrC,SAAAyB,IAFC,OAEDA,GAAAxB,EAAAA,EAAAA,GAAAC,IAAAA,MAXO,SAAAwB,EAA+BtE,GAAO,IAAAgD,EAAA,OAAAF,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,UAAAmB,EAAApB,KAAA,EAEhCnD,EAAQ,CAADuE,EAAAnB,KAAA,eAAAmB,EAAAf,OAAA,SAAS,MAAI,cAAAe,EAAAnB,KAAA,EACFC,MAAM,GAADjC,OAAIoB,EAAQ,WAAApB,OAAUpB,EAAO,aAAAoB,OAAYiB,EAAO,oBAAmB,KAAD,EAAhF,OAARW,EAAQuB,EAAAjB,KAAAiB,EAAAf,OAAA,SACPR,EAASO,QAAM,OAEkD,OAFlDgB,EAAApB,KAAA,EAAAoB,EAAAb,GAAAa,EAAA,SAEtBZ,QAAQC,MAAM,uCAADxC,OAAwCpB,EAAO,KAAAuE,EAAAb,IAAYa,EAAAf,OAAA,SACjE,MAAI,yBAAAe,EAAAV,OAAA,GAAAS,EAAA,mBAElB3B,MAAA,KAAAC,UAAA,CAMM,SAAe4B,EAAeC,GAAA,OAAAC,EAAA/B,MAAC,KAADC,UAAA,CAWrC,SAAA8B,IAFC,OAEDA,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAXO,SAAA6B,EAA+B3E,GAAO,IAAAgD,EAAA,OAAAF,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,UAAAwB,EAAAzB,KAAA,EAEhCnD,EAAQ,CAAD4E,EAAAxB,KAAA,eAAAwB,EAAApB,OAAA,SAAS,CAAEqB,KAAM,KAAI,cAAAD,EAAAxB,KAAA,EACVC,MAAM,GAADjC,OAAIoB,EAAQ,WAAApB,OAAUpB,EAAO,qBAAAoB,OAAoBiB,EAAO,oBAAmB,KAAD,EAAxF,OAARW,EAAQ4B,EAAAtB,KAAAsB,EAAApB,OAAA,SACPR,EAASO,QAAM,OAE+C,OAF/CqB,EAAAzB,KAAA,EAAAyB,EAAAlB,GAAAkB,EAAA,SAEtBjB,QAAQC,MAAM,oCAADxC,OAAqCpB,EAAO,KAAA4E,EAAAlB,IAAYkB,EAAApB,OAAA,SAC9D,CAAEqB,KAAM,KAAI,yBAAAD,EAAAf,OAAA,GAAAc,EAAA,mBAE1BhC,MAAA,KAAAC,UAAA,CAMM,SAAekC,EAAeC,GAAA,OAAAC,EAAArC,MAAC,KAADC,UAAA,CAUpC,SAAAoC,IAAA,OAAAA,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAVM,SAAAmC,EAA+BjF,GAAO,IAAAgD,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,UAAA8B,EAAA/B,KAAA,EAEhCnD,EAAQ,CAADkF,EAAA9B,KAAA,eAAA8B,EAAA1B,OAAA,SAAS,IAAE,cAAA0B,EAAA9B,KAAA,EACAC,MAAM,GAADjC,OAAIoB,EAAQ,WAAApB,OAAUpB,EAAO,qBAAAoB,OAAoBiB,EAAO,oBAAmB,KAAD,EAAxF,OAARW,EAAQkC,EAAA5B,KAAA4B,EAAA9B,KAAA,EACKJ,EAASO,OAAO,KAAD,EAAxB,OAAJN,EAAIiC,EAAA5B,KAAA4B,EAAA1B,OAAA,SACHP,EAAKQ,SAAW,IAAE,QAE+C,OAF/CyB,EAAA/B,KAAA,GAAA+B,EAAAxB,GAAAwB,EAAA,SAEzBvB,QAAQC,MAAM,uCAADxC,OAAwCpB,EAAO,KAAAkF,EAAAxB,IAAYwB,EAAA1B,OAAA,SACjE,IAAE,yBAAA0B,EAAArB,OAAA,GAAAoB,EAAA,oBAEhBtC,MAAA,KAAAC,UAAA,C","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"backButton\":\"MovieDetails_backButton__ilGfB\",\"detailsWrapper\":\"MovieDetails_detailsWrapper__Uh3gr\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"details\":\"MovieDetails_details__tmd20\",\"additionalInfo\":\"MovieDetails_additionalInfo__qmwMY\"};","import { useEffect, useState, Suspense } from \"react\";\nimport { useParams, Link, Outlet } from \"react-router-dom\";\nimport { getMovieDetails } from \"../services/movieAPI\";\nimport styles from \"./MovieDetails.module.css\";\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        getMovieDetails(movieId).then(setMovie);\n    }, [movieId]);\n\n    if (!movie) return <p>Loading movie details...</p>;\n\n    return (\n        <div className={styles.container}>\n            <Link to=\"/\" className={styles.backButton}>&larr; Go back</Link>\n            <div className={styles.detailsWrapper}>\n                <img\n                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"https://via.placeholder.com/300x450?text=No+Image\"}\n                    alt={movie.title}\n                    className={styles.poster}\n                />\n                <div className={styles.details}>\n                    <h1>{movie.title} ({movie.release_date?.slice(0, 4)})</h1>\n                    <p><strong>User Score:</strong> {Math.round(movie.vote_average * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{movie.genres.map(g => g.name).join(\", \")}</p>\n                </div>\n            </div>\n\n            <div className={styles.additionalInfo}>\n                <h3>Additional information</h3>\n                <ul>\n                    <li><Link to=\"cast\">Cast</Link></li>\n                    <li><Link to=\"reviews\">Reviews</Link></li>\n                </ul>\n            </div>\n\n            <Suspense fallback={<p>Loading...</p>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n}\n\nexport default MovieDetails;\n\n","const API_KEY = process.env.REACT_APP_TMDB_API_KEY; \nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\n/**\n * Fetches the trending movies of the day.\n */\nexport async function getTrendingMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error fetching trending movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Searches for movies based on a keyword.\n * @param {string} query - The search query.\n */\nexport async function searchMovies(query) {\n    try {\n        if (!query) return []; // Prevents unnecessary API calls\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error searching for movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the details of a specific movie by ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieDetails(movieId) {\n    try {\n        if (!movieId) return null;\n        const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching details for movie ID ${movieId}:`, error);\n        return null;\n    }\n}\n\n/**\n * Fetches the cast information for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieCredits(movieId) {\n    try {\n        if (!movieId) return { cast: [] };\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching cast for movie ID ${movieId}:`, error);\n        return { cast: [] };\n    }\n}\n\n/**\n * Fetches movie reviews for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieReviews(movieId) {\n    try {\n        if (!movieId) return [];\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(`Error fetching reviews for movie ID ${movieId}:`, error);\n        return [];\n    }\n}\n\n"],"names":["_movie$release_date","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","getMovieDetails","then","_jsxs","className","styles","children","_jsx","Link","to","src","poster_path","concat","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","g","name","join","Suspense","fallback","Outlet","API_KEY","process","REACT_APP_TMDB_API_KEY","BASE_URL","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","sent","json","abrupt","results","t0","console","error","stop","searchMovies","_x","_searchMovies","_callee2","query","_context2","_x2","_getMovieDetails","_callee3","_context3","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","cast","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}