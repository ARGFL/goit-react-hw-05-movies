{"version":3,"file":"static/js/76.5d9d6dec.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"error\":\"Cast_error__hQWWB\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCredits } from \"../services/movieAPI\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Cast.module.css\";\n\nfunction Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        getMovieCredits(movieId)\n            .then(data => {\n                if (data && data.cast) {\n                    setCast(data.cast);\n                } else {\n                    setCast([]);\n                }\n            })\n            .catch(err => {\n                console.error(\"Error fetching cast:\", err);\n                setError(\"Failed to load cast information.\");\n            })\n            .finally(() => setLoading(false));\n    }, [movieId]);\n\n    if (loading) return <p>Loading cast...</p>;\n    if (error) return <p className={styles.error}>{error}</p>;\n    if (!cast.length) return <p>No cast information available.</p>;\n\n    return (\n        <div className={styles.castList}>\n            {cast.map(actor => (\n                <div key={actor.id} className={styles.castItem}>\n                    <img \n                        src={actor.profile_path \n                            ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` \n                            : \"https://via.placeholder.com/100x150?text=No+Image\"} \n                        alt={actor.name || \"Unknown Actor\"} \n                        className={styles.castImage}\n                    />\n                    <p><strong>{actor.name || \"Unknown\"}</strong></p>\n                    <p>Character: {actor.character || \"N/A\"}</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\n// âœ… Add PropTypes to ensure correct props\nCast.propTypes = {\n    cast: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string,\n            character: PropTypes.string,\n            profile_path: PropTypes.string,\n        })\n    )\n};\n\nexport default Cast;\n","const API_KEY = process.env.REACT_APP_TMDB_API_KEY; \nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\n/**\n * Fetches the trending movies of the day.\n */\nexport async function getTrendingMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error fetching trending movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Searches for movies based on a keyword.\n * @param {string} query - The search query.\n */\nexport async function searchMovies(query) {\n    try {\n        if (!query) return []; // Prevents unnecessary API calls\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error searching for movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the details of a specific movie by ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieDetails(movieId) {\n    try {\n        if (!movieId) return null;\n        const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching details for movie ID ${movieId}:`, error);\n        return null;\n    }\n}\n\n/**\n * Fetches the cast information for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieCredits(movieId) {\n    try {\n        if (!movieId) return { cast: [] };\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching cast for movie ID ${movieId}:`, error);\n        return { cast: [] };\n    }\n}\n\n/**\n * Fetches movie reviews for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieReviews(movieId) {\n    try {\n        if (!movieId) return [];\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(`Error fetching reviews for movie ID ${movieId}:`, error);\n        return [];\n    }\n}\n\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","getMovieCredits","then","data","catch","err","console","finally","_jsx","children","className","styles","length","map","actor","_jsxs","src","profile_path","concat","alt","name","character","id","API_KEY","process","REACT_APP_TMDB_API_KEY","BASE_URL","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","sent","json","abrupt","results","t0","stop","searchMovies","_x","_searchMovies","_callee2","query","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","_context3","_x3","_getMovieCredits","_callee4","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}