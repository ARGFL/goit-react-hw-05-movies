{"version":3,"file":"static/js/810.8c55001c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/Movies.module.css?de10","components/pages/Movies.jsx","components/services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__WJzYR\",\"searchForm\":\"Movies_searchForm__I3T8d\",\"searchInput\":\"Movies_searchInput__Pbx5C\",\"searchButton\":\"Movies_searchButton__xzJkf\",\"movieList\":\"Movies_movieList__bKdpt\"};","import { useEffect, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { searchMovies } from \"../services/movieAPI\";\nimport styles from \"./Movies.module.css\";\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") || \"\";\n\n    useEffect(() => {\n        if (query) {\n            searchMovies(query)\n                .then((results) => {\n                    if (results.length > 0) {\n                        setMovies(results);\n                    } else {\n                        setMovies([]);\n                    }\n                })\n                .catch((error) => {\n                    console.error(\"Error fetching search results:\", error);\n                    setMovies([]);\n                });\n        }\n    }, [query]);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.target;\n        const searchValue = form.elements.query.value.trim();\n        if (!searchValue) return;\n        setSearchParams({ query: searchValue });\n    };\n\n    return (\n        <div className={styles.container}>\n            <form onSubmit={handleSubmit} className={styles.searchForm}>\n                <input\n                    type=\"text\"\n                    name=\"query\"\n                    defaultValue={query}\n                    placeholder=\"Search for a movie...\"\n                    className={styles.searchInput}\n                />\n                <button type=\"submit\" className={styles.searchButton}>Search</button>\n            </form>\n\n            {movies.length > 0 ? (\n                <ul className={styles.movieList}>\n                    {movies.map((movie) => (\n                        <li key={movie.id}>\n                            <Link to={`/movies/${movie.id}`}>\n                                {movie.title}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            ) : query ? (\n                <p>No results found for \"{query}\"</p>\n            ) : (\n                <p>Search for a movie</p>\n            )}\n        </div>\n    );\n}\n\n\nexport default Movies;","const API_KEY = process.env.REACT_APP_TMDB_API_KEY; \nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\n/**\n * Fetches the trending movies of the day.\n */\nexport async function getTrendingMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error fetching trending movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Searches for movies based on a keyword.\n * @param {string} query - The search query.\n */\nexport async function searchMovies(query) {\n    try {\n        if (!query) return []; // Prevents unnecessary API calls\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error searching for movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the details of a specific movie by ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieDetails(movieId) {\n    try {\n        if (!movieId) return null;\n        const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching details for movie ID ${movieId}:`, error);\n        return null;\n    }\n}\n\n/**\n * Fetches the cast information for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieCredits(movieId) {\n    try {\n        if (!movieId) return { cast: [] };\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching cast for movie ID ${movieId}:`, error);\n        return { cast: [] };\n    }\n}\n\n/**\n * Fetches movie reviews for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieReviews(movieId) {\n    try {\n        if (!movieId) return [];\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(`Error fetching reviews for movie ID ${movieId}:`, error);\n        return [];\n    }\n}\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","searchMovies","then","results","length","catch","error","console","_jsxs","className","styles","children","onSubmit","event","preventDefault","searchValue","target","elements","value","trim","_jsx","type","name","defaultValue","placeholder","map","movie","Link","to","concat","id","title","API_KEY","process","REACT_APP_TMDB_API_KEY","BASE_URL","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","sent","json","abrupt","t0","stop","_x","_searchMovies","_callee2","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","movieId","_context3","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","cast","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}