{"version":3,"file":"static/js/370.51c877b5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/Home.module.css?df74","components/pages/Home.jsx","components/services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__rdxHF\",\"title\":\"Home_title__34wa5\",\"movieList\":\"Home_movieList__L2xY9\"};","import { useEffect, useState } from \"react\";\nimport { getTrendingMovies } from \"../services/movieAPI\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.css\"; \n\nfunction Home() {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        getTrendingMovies().then(setMovies);\n    }, []);\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>Trending Today</h1>\n            <ul className={styles.movieList}>\n                {movies.map((movie) => (\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Home;\n\n\n\n","const API_KEY = process.env.REACT_APP_TMDB_API_KEY; \nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\n/**\n * Fetches the trending movies of the day.\n */\nexport async function getTrendingMovies() {\n    try {\n        const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error fetching trending movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Searches for movies based on a keyword.\n * @param {string} query - The search query.\n */\nexport async function searchMovies(query) {\n    try {\n        if (!query) return []; // Prevents unnecessary API calls\n        const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(\"Error searching for movies:\", error);\n        return [];\n    }\n}\n\n/**\n * Fetches the details of a specific movie by ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieDetails(movieId) {\n    try {\n        if (!movieId) return null;\n        const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching details for movie ID ${movieId}:`, error);\n        return null;\n    }\n}\n\n/**\n * Fetches the cast information for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieCredits(movieId) {\n    try {\n        if (!movieId) return { cast: [] };\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.json();\n    } catch (error) {\n        console.error(`Error fetching cast for movie ID ${movieId}:`, error);\n        return { cast: [] };\n    }\n}\n\n/**\n * Fetches movie reviews for a given movie ID.\n * @param {string} movieId - The ID of the movie.\n */\nexport async function getMovieReviews(movieId) {\n    try {\n        if (!movieId) return [];\n        const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        const data = await response.json();\n        return data.results || [];\n    } catch (error) {\n        console.error(`Error fetching reviews for movie ID ${movieId}:`, error);\n        return [];\n    }\n}\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","getTrendingMovies","then","_jsxs","className","styles","children","_jsx","map","movie","Link","to","concat","id","title","API_KEY","process","REACT_APP_TMDB_API_KEY","BASE_URL","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","sent","json","abrupt","results","t0","console","error","stop","searchMovies","_x","_searchMovies","_callee2","query","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","movieId","_context3","getMovieCredits","_x3","_getMovieCredits","_callee4","_context4","cast","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5"],"sourceRoot":""}